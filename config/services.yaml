# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

    app.mailer.contact: '%env(CONTACT_MAIL_SNOWTRICKS)%'
    app.uploads_directory: '%kernel.project_dir%/public/uploads'
    app.home.number.item: 2

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # _instanceof:
    #   Symfony\Bundle\FrameworkBundle\Controller\AbstractController:
    #     tags: [ controller.service_arguments]

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Security\EventListener\UserSignUpSuccessEmailListener:
        tags: 
          - {name: kernel.event_listener, event: user.signup.success}
        arguments:
          $contactFrom: '%app.mailer.contact%'

    App\Security\EventListener\UserSigninSuccessEmailListener:
        tags: 
          - {name: kernel.event_listener, event: user.signin.success}
        arguments:
          $contactFrom: '%app.mailer.contact%'

    App\Security\EventListener\ForgotPasswordSuccessEmail:
        tags: 
          - {name: kernel.event_listener, event: user.forgot.password.success}
        arguments:
          $contactFrom: '%app.mailer.contact%'

    App\Security\EventListener\ResetPasswordSuccessEmail:
        tags: 
          - {name: kernel.event_listener, event: user.reset.password.success}
        arguments:
          $contactFrom: '%app.mailer.contact%'

    App\Tricks\Repository\TricksRepository:
        arguments:
          $limitPerPage: '%app.home.number.item%'
